{"version":3,"file":"static/js/634.02c9e3b0.chunk.js","mappings":"sOAEaA,E,OAAeC,GAAAA,IAAH,iD,SC2DzB,EAtDe,WACX,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAI,SACpC,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAASF,GAA0B,IAA7D,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAG,UAZD,gCAYC,gCAXD,mCAWC,4DAAgGL,GAE3F,KAAVA,GAKAM,MAAMD,GAAKE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IAAqBF,MAAK,SAAAG,GAC9CX,EAAUW,EAAKC,QAAQC,KAAI,kBAAoB,CAAEC,GAAtB,EAAGA,GAA2BC,MAA9B,EAAOA,MAAP,IAC9B,IAAEC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAIrB,GAAE,CAAChB,IAWJ,OACI,UAACV,EAAD,YACI,kBAAM6B,OAAO,GAAGC,SAXF,SAAAC,GAClBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOxB,MAAMuB,MAC7BtB,EAASsB,GACT7B,EAAgB,CAAEM,MAAOuB,IACzBF,EAAEG,OAAOxB,MAAMuB,MAAQ,EAC1B,EAKO,WACI,kBAAOE,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,wBAIJ,wBACK3B,EAAOc,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACf,OAAQ,yBACJ,SAAC,KAAD,CAAMa,GAAE,UAAKd,GAAMe,OAAQ,CAACC,WAAW,SAAD,OAAW7B,IAAU8B,MAAO,CAAEC,KAAM7B,GAA1E,SACKY,KAFQD,EAKpB,QAIhB,C","sources":["components/Movies/Movies.styled.jsx","components/Movies/Movies.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const MoviesStyled = styled.div`\n    padding: 20px 40px;\n`;","import { useState, useEffect} from \"react\";\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\nimport { MoviesStyled } from \"./Movies.styled\";\n\nconst API_URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"afc22cf5c573169849cabd6217d3b7d3\";\n\nconst Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const queryParam = searchParams.get(\"query\");\n    const [movies, setMovies] = useState([]);\n    const [query, setQuery] = useState(queryParam ? queryParam : \"\");\n    const location = useLocation();\n    \n\n    useEffect(() => {\n        const url = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`;\n\n        if (query === \"\") {\n            return;\n        }\n        \n        function fetchMovie() {\n            fetch(url).then(response => response.json()).then(data => {\n                setMovies(data.results.map(({ id, title }) => ({ id: id, title: title })))\n            }).catch(error => console.log(error));\n        }\n\n        fetchMovie();\n    }, [query]);\n\n    const handleSubbmit = e => {\n        e.preventDefault();\n        const value = e.target.query.value;\n        setQuery(value);\n        setSearchParams({ query: value });\n        e.target.query.value = \"\";\n    }\n\n\n    return (\n        <MoviesStyled>\n            <form action=\"\" onSubmit={handleSubbmit}>\n                <input type=\"text\" name=\"query\" />\n                <button type=\"submit\">Search</button>\n            </form>\n            \n            \n            <ul>\n                {movies.map(({ id, title }) => {\n                    return (<li key={id}>\n                        <Link to={`${id}`} search={{querySerch: `query=${query}`}} state={{ from: location }}>                            \n                            {title}\n                        </Link>\n                    </li>)\n                })}\n            </ul>\n        </MoviesStyled>\n    );\n}\n\nexport default Movies;"],"names":["MoviesStyled","styled","useSearchParams","searchParams","setSearchParams","queryParam","get","useState","movies","setMovies","query","setQuery","location","useLocation","useEffect","url","fetch","then","response","json","data","results","map","id","title","catch","error","console","log","action","onSubmit","e","preventDefault","value","target","type","name","to","search","querySerch","state","from"],"sourceRoot":""}