{"version":3,"file":"static/js/736.180102b2.chunk.js","mappings":"wOAEaA,EAAaC,EAAAA,GAAAA,GAAH,iDAKVC,EAAiBD,EAAAA,GAAAA,GAAH,kI,SCwC3B,EAtCa,WACT,OAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAqBR,OAnBAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAO,UATL,gCASK,iBAAsBH,EAAtB,4BARL,mCAQK,mBAGTI,MAAMD,GAASE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IAAqBF,MAAK,SAAAG,GAClDT,EAAUS,EAAKC,KAAKC,KAAI,YAAsC,IAApCC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,UAC1C,MAAO,CACHC,OAAQH,EAAY,0CAAsCA,GAb9D,+EAcIC,KAAMA,EACNC,UAAWA,EAElB,IACJ,IAAEE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAIrB,GAAE,CAAChB,KAIA,SAACN,EAAD,UACKI,EAAOY,KAAI,YAAgC,IAA9BI,EAA6B,EAA7BA,OAAQF,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,UACxB,OACI,UAACjB,EAAD,YACI,gBAAKuB,IAAKL,EAAQM,IAAKR,EAAMS,MAAM,MAAMC,OAAO,SAChD,uBAAIV,KACJ,uCAAeC,OAHED,EAM5B,KAGZ,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const CastStyled = styled.ul`\n    list-style: none;\n\n`;\n\nexport const CastItemStyled = styled.li`\n    :not(:last-child) {\n        margin-bottom: 30px;\n    }\n\n    p {\n        margin: 0;\n    }\n    \n`;","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { CastStyled, CastItemStyled } from \"./Cast.styled\";\n\n\nconst API_URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"afc22cf5c573169849cabd6217d3b7d3\";\nconst placeHolder = \"https://upload.wikimedia.org/wikipedia/commons/8/89/Portrait_Placeholder.png\";\n\nconst Cast = () => {\n    const [actors, setActors] = useState([]);\n    const { id } = useParams();\n    \n    useEffect(() => {        \n        const urlCast = `${API_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`;        \n\n        function fetchActors() {\n            fetch(urlCast).then(response => response.json()).then(data => {                \n                setActors(data.cast.map(({profile_path, name, character}) => {                    \n                    return {\n                        poster: profile_path ? `https://image.tmdb.org/t/p/w500/${profile_path}` : placeHolder,                       \n                        name: name,\n                        character: character,\n                    };\n                }));\n            }).catch(error => console.log(error));\n        }\n\n        fetchActors();\n    }, [id]);\n\n\n    return (\n        <CastStyled>\n            {actors.map(({poster, name, character}) => {\n                return (\n                    <CastItemStyled key={name}>\n                        <img src={poster} alt={name} width=\"180\" height=\"240\" />\n                        <p>{name}</p>\n                        <p>Character: {character}</p>\n                    </CastItemStyled>                    \n                );\n            })}\n        </CastStyled>        \n    );\n}\n\nexport default Cast;"],"names":["CastStyled","styled","CastItemStyled","useState","actors","setActors","id","useParams","useEffect","urlCast","fetch","then","response","json","data","cast","map","profile_path","name","character","poster","catch","error","console","log","src","alt","width","height"],"sourceRoot":""}