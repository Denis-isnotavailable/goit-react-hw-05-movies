{"version":3,"file":"static/js/974.298786a7.chunk.js","mappings":"qPAIaA,EAAqBC,EAAAA,GAAAA,IAAH,mGAQlBC,GAAiBD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,6SAedG,EAAiBH,EAAAA,GAAAA,GAAH,0KCzBdI,EAAsBJ,EAAAA,GAAAA,IAAH,8H,SCEnBK,EAAgB,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAE5D,OACI,UAACN,EAAD,YACI,0BACI,gBAAKO,IAAKL,EAAQM,IAAKL,EAAOM,MAAM,MAAMC,OAAO,WAErD,4BACI,wBAAKP,KACL,wCAAgBC,EAAhB,QACA,sCACA,uBAAIC,KACJ,oCACA,uBAAIC,SAInB,ECkCD,EA9CqB,WAAO,IAAD,IACvB,GAA0BK,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,EAAQ,qBADGC,EAAAA,EAAAA,MACSC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAoBzC,OAlBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,UAVR,gCAUQ,iBAAsBP,EAAtB,oBATR,mCASQ,mBAGZQ,MAAMD,GAAYE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IAAqBF,MAAK,SAAAG,GACrDb,EAAS,CACLX,OAAO,mCAAD,OAAqCwB,EAAKC,aAChDxB,MAAOuB,EAAKvB,MACZC,MAAOwB,OAAOC,SAA6B,GAApBH,EAAKI,cAC5BzB,SAAUqB,EAAKrB,SACfC,OAAQoB,EAAKpB,OAAOyB,QAAO,SAACC,EAAKC,GAAN,OAAiBD,GAAOC,EAAMC,KAAO,IAArC,GAA2C,IAAIC,QACjF,IAAEC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAIrB,GAAE,CAACvB,KAIA,2BACI,UAACnB,EAAD,YACI,SAACE,EAAD,CAAgB2C,GAAIxB,EAApB,sBAEA,SAACf,EAAD,CAAeC,OAAQU,EAAMV,OAAQC,MAAOS,EAAMT,MAAOC,MAAOQ,EAAMR,MAAOC,SAAUO,EAAMP,SAAUC,OAAQM,EAAMN,UAErH,eAAImC,MAAO,CAAEC,UAAW,QAAxB,qCACA,UAAC3C,EAAD,YACI,yBAAI,SAAC,KAAD,CAAMyC,GAAG,OAAOtB,MAAO,CAAEC,KAAMH,GAA/B,qBACJ,yBAAI,SAAC,KAAD,CAAMwB,GAAG,UAAUtB,MAAO,CAAEC,KAAMH,GAAlC,2BAGR,SAAC,EAAA2B,SAAD,CAAUC,UAAU,6CAApB,UACI,SAAC,KAAD,UAMnB,C","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieMainInfo/MovieMainInfo.styled.jsx","components/MovieMainInfo/MovieMainInfo.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n\nexport const MovieDetailsStyled = styled.div`\n    padding: 40px;\n\n    h1, h2, h3 {\n        margin: 0;        \n    }\n`;\n\nexport const BackLinkStyled = styled(Link)`\n    display: inline-block;\n    padding: 3px 10px;\n    margin-bottom: 10px;\n    border: 1px solid #ccc8c8;\n    border-radius: 10px;\n    color: #000000;\n    text-decoration: none;\n\n    :hover, :focus {\n        color: #ffffff;\n        background-color: #a8a8ee;\n    }\n`;\n\nexport const AdditionalInfo = styled.ul`   \n    padding-bottom: 12px;\n    border-bottom: 2px solid #ccc8c8;\n    \n    a {\n        display: block;\n        margin-bottom: 10px;\n    }\n`;","import styled from \"styled-components\";\n\nexport const MovieMainInfoStyled = styled.div`\n    display: flex;\n    gap: 16px;\n    padding-bottom: 12px;\n    border-bottom: 2px solid #ccc8c8;\n`;","import PropTypes from 'prop-types';\nimport { MovieMainInfoStyled } from \"./MovieMainInfo.styled\";\n\n\nexport const MovieMainInfo = ({ poster, title, score, overview, genres }) => {    \n\n    return (\n        <MovieMainInfoStyled>\n            <div>\n                <img src={poster} alt={title} width=\"240\" height=\"320\" />\n            </div>\n            <div>\n                <h1>{title}</h1>\n                <p>User Score: {score}%</p>\n                <h2>Overview</h2>\n                <p>{overview}</p>\n                <h3>Genres</h3>\n                <p>{genres}</p>                        \n            </div>\n        </MovieMainInfoStyled>\n    );\n}\n\nMovieMainInfo.propTypes = {\n    props: PropTypes.shape({\n        poster: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        score: PropTypes.number.isRequired,\n        overview: PropTypes.string.isRequired,\n        genres: PropTypes.string.isRequired,\n    })\n    \n}","import { Outlet, useLocation, useParams, Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { Suspense } from \"react\";\nimport { MovieDetailsStyled, BackLinkStyled, AdditionalInfo } from \"./MovieDetails.styled\";\nimport { MovieMainInfo } from \"components/MovieMainInfo/MovieMainInfo\";\n\nconst API_URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"afc22cf5c573169849cabd6217d3b7d3\";\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState({});\n    const { id } = useParams();\n    const location = useLocation();\n    const backLink = location.state?.from ?? \"/movies\";    \n\n    useEffect(() => {\n        const urlDetails = `${API_URL}movie/${id}?api_key=${API_KEY}&language=en-US`;        \n\n        function fetchMovie() {\n            fetch(urlDetails).then(response => response.json()).then(data => {               \n                setMovie({\n                    poster: `https://image.tmdb.org/t/p/w500/${data.poster_path}`,\n                    title: data.title,\n                    score: Number.parseInt(data.vote_average * 10),\n                    overview: data.overview,\n                    genres: data.genres.reduce((acc, genre) => (acc += genre.name + \" \"), \"\").trim()});\n            }).catch(error => console.log(error));\n        }\n\n        fetchMovie();\n    }, [id]);\n\n\n    return (\n        <main>\n            <MovieDetailsStyled>\n                <BackLinkStyled to={backLink} >Go back</BackLinkStyled>\n\n                <MovieMainInfo poster={movie.poster} title={movie.title} score={movie.score} overview={movie.overview} genres={movie.genres}/>              \n\n                <h2 style={{ marginTop: \"12px\" }}>Additional information</h2>\n                <AdditionalInfo>\n                    <li><Link to=\"cast\" state={{ from: backLink }}>Cast</Link></li>\n                    <li><Link to=\"reviews\" state={{ from: backLink }}>Reviews</Link></li>           \n                </AdditionalInfo>\n\n                <Suspense fallback={<div>Loading page...</div>} >\n                    <Outlet />\n                </Suspense>\n                \n            </MovieDetailsStyled>            \n        </main>\n    );\n}\n\nexport default MovieDetails;"],"names":["MovieDetailsStyled","styled","BackLinkStyled","Link","AdditionalInfo","MovieMainInfoStyled","MovieMainInfo","poster","title","score","overview","genres","src","alt","width","height","useState","movie","setMovie","id","useParams","backLink","useLocation","state","from","useEffect","urlDetails","fetch","then","response","json","data","poster_path","Number","parseInt","vote_average","reduce","acc","genre","name","trim","catch","error","console","log","to","style","marginTop","Suspense","fallback"],"sourceRoot":""}